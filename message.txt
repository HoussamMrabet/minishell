echo bonjour > test\ 1

echo 2 >> out1 > out2 works by 12;20
echo 2 > out1 >> out2  //////////////////////////////////////////////////////////should be handle 
cat < test


 echo bonjour ; |
 echo bonjour | |
 |
 echo bonjour |;
 echo bonjour ; ls
 echo bonjour > test\ 1
 cd $HOME/Documents
 echo "\s" & echo "\s"
 echo >
 echo -n -n -nnnn -nnnnm  //////////////////////////////////////////////////////////should be handle
 cat /dev/random | head -n 1 | cat -e
 unset var1 # with undefined var1
 export "" et unset ""
 echo test > file test1 ////////////////////////////////////////////////////////////////////////////////// should be handle
 $
 not_cmd bonjour > salut ///////////////////////////works at 11.05
 env puis export puis env # vars aren't sorted
 cat Makefile | grep pr | head -n 5 | cd test (mybin) # check status code
 cat Makefile | grep pr | head -n 5 | cat test (bin) # check status code
 cat Makefile | grep pr | head -n 5 | hello (NA) # check status code
 echo bonjour >>> test
 echo bonjour > > out
 cat < test # with non-existent test
 export var; export var=test
 echo bonjour > $test # with test not defined
 file_name_in_current_dir
 cd ../../../../../.. ; pwd
 ctrl-C . 130 sur bin(ex : sleep 10)&line vide
 ctrl-\ .131 sur bin
 echo "bip | bip ; coyotte > < " "
 cat | cat | cat | ls # check outputs order
 bash-3.2$ cat | cat | caaat | ls  ///works at 11.34
 $bla # with bla not defined
 export var ="cat Makefile | grep >"
 export "test=ici"=coucou //////////////////////////////////////////////////////////////////////////////////
 c$var Makefile # with var=at
 $LESS$VAR
 /bin/echo bonjour
 not_cmd
 sleep 5 | exit
 echo bonjour > $test w/ t
 "exit retour a la ligne"
 minishell # binary not in path without "./" before
 cat diufosgid # check exit code
 exit # should return the last exit code value
 exit -10
 exit +10
 ;
 echo coucou | ;
 echo "$HOME" //////////////////////////////////////////////////////////////////////////////////
 echo '$HOME' //////////////////////////////////////////////////////////////////////////////////
 export ; env # display is different for both commands
 echo $HOME
 > log echo coucou /////////////////////////////////////////////////////////////////////
 echo hudifg d | | hugdfihd
 echo
 echo simple
 echo -n simple
 echo '' //////////////////////////////////////////////////////////////////////////////////
 echo "" //////////////////////////////////////////////////////////////////////////////////
 echo "\" //////////////////////////////////////////////////////////////////////////////////
 echo "\n \n \n"
 echo "\n \n \\n" //////////////////////////////////////////////////////////////////////////////////
 echo ;; //////////////////////////////////////////////////////////////////////////////////
 echo hi";" hihi //////////////////////////////////////////////////////////////////////////////////
 echo hi " ; " hihi //////////////////////////////////////////////////////////////////////////////////
 cd
 cd .
 cd ~
 cd /
 cd no_file
 cd a b c d
 pwd a
 pwd a b c d
 export LOL=lala ROR=rara
 unset LOL ROR
 export "HI= hi" //////////////////////////////////////////////////////////////////////////////////
 export "HI =hi"
 /bin/ls
 # write something the press ctrl+c
 # write something then press ctrl+d
 # write something then press ctrl+\
 echo $?
 l^Ds
 echo |
 | echo
 sort | ls # check output order
 cat < >
 cat < <
 cat > >
 > a ls > b < Makefile
 echo > a Hello World!
 > a echo Hello World!
 cat < Makefile | grep gcc > output
 exit 0 | exit 1
 exit 1 | exit 0


///////////////////////////////////////////////
echo > a Hello World!
echo 2 > out1 >> out2
echo test > file test1

not_cmd bonjour > salut
ls > file > file1  // works now at 4.26
ls > f7 < nofile > f3 > f4// works now at 4.25


echo bonjour > $tes
//////////////////////
export+ // redirection // pipe li f herdoc //





////////////////////////////////
export SHLVL=999

Mini$hell$: cd ..
cd: error retrieving current directory: No such file or directory
Mini$hell$: env | grep PWD
PWD=/Users/sfellahi/Desktop/DEATH/1/2/3/4
OLDPWD=/Users/sfellahi/Desktop/DEATH /* add .. at the end of PWD when you inside deleted directory */
 echo -n -n -n -n
 echo -nnnnnn n- hello
 ls | > filenotfound | wc -l
 ls | << filenotfound | wc -l
 ls | $notvar  | wc -l  SEGV

ls | 



# MINISHELL

## Errors to handle:
### - possible segv in lexer

### - cd $PWD hi

### - exit MALLONG || exit MINLLONG

### - echo < infile
###   echo < infiel | echo 42

### - echo 42 > /DIR/outfile | echo 1337

## $"USER" in heredoc should exit with $USER not $$USER

## echo he$$-ltest$USER-$1fds"hello$$-test$1fds$'tess$"'hello$$-test$1fds$"tess$'

## export SHLVL=-21 => set 0 

## echo "hello$$-test$1fds$'tess$"

## ls << "" | <<

##  << a cat

``minishell >$ << a cat
> '$USER'
> a
zsh: segmentation fault  ./minishell``

``minishell >$ cat << a
> $dsfds
> a
zsh: segmentation fault  ./minishell``


#echo bonjour > test\ 1
echo 2 >> out1 > out2

 cd -